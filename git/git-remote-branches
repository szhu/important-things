#!/usr/bin/env python
'''
Prints out branches that have a valid remote, in the format of git-branch(1).
'''

def main():
  from subprocess import Popen, PIPE
  from re import match, compile
  from sys import stdout

  q = Popen(['git', 'rev-parse', '--abbrev-ref', 'HEAD'], stdout=PIPE); q.wait()
  current_branch = q.stdout.readline().strip()

  p = Popen(['git', 'for-each-ref', '--python', '--format', """(%(refname:short), %(upstream:short))""", 'refs/heads'], stdout=PIPE)
  for line in p.stdout.readlines():
    branch, remote = eval(line)
    q = Popen(['git', 'show-branch', '--list', remote], stdout=PIPE, stderr=PIPE); q.wait()

    is_current = branch == current_branch
    has_remote = q.returncode == 0

    if is_current:
      if has_remote: sym = '*'
      else:          sym = 'x'
    elif has_remote: sym = ' '
    else:            continue

    print sym, branch

if __name__ == '__main__':
  main()
