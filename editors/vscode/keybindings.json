[
  // Reload window
  {
    "key": "ctrl+alt+cmd+r",
    "command": "workbench.action.reloadWindow"
  },
  {
    "key": "cmd+r",
    "command": "-workbench.action.reloadWindow",
    "when": "isDevelopment"
  },

  // Disable global app shortcut used for Merge All Windows
  {
    "key": "shift+cmd+y",
    "command": "-workbench.debug.action.toggleRepl"
  },

  ////////////////////////////////////////////////////////////////////////////////////////
  // Navigating files
  ////////////////////////////////////////////////////////////////////////////////////////

  // Copy relative path
  {
    "key": "shift+alt+cmd+c",
    "command": "copyRelativeFilePath"
  },
  {
    "key": "shift+alt+cmd+c",
    "command": "-copyRelativeFilePath",
    "when": "!editorFocus"
  },

  // Opening files
  {
    "key": "alt+cmd+.",
    "command": "quickOpenRelatedFiles.show",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+.",
    "command": "-quickOpenRelatedFiles.show",
    "when": "editorTextFocus"
  },

  ////////////////////////////////////////////////////////////////////////////////////////
  // Sidebar & viewlets
  ////////////////////////////////////////////////////////////////////////////////////////

  // Sidebar
  {
    "key": "cmd+l cmd+\\",
    "command": "workbench.action.toggleSidebarVisibility"
  },

  {
    "key": "cmd+l cmd+e",
    "command": "workbench.view.explorer",
  },
  {
    "key": "cmd+l cmd+b",
    "command": "workbench.view.extension.bookmarks"
  },
  {
    "key": "cmd+l cmd+g",
    "command": "workbench.view.scm"
  },
  {
    "key": "cmd+l cmd+p",
    "command": "workbench.view.extension.github-pull-requests"
  },
  {
    "key": "cmd+l cmd+l",
    "command": "workbench.view.extension.gitlens"
  },
  {
    "key": "cmd+l cmd+x",
    "command": "workbench.view.extensions"
  },

  // Explorer
  {
    "key": "shift+cmd+e",
    "command": "workbench.files.action.showActiveFileInExplorer",
    "when": "editorTextFocus"
  },

  // Git
  {
    "key": "alt+enter",
    "command": "git.stageSelectedRanges",
    "when": "editorHasSelection"
  },
  {
    "key": "shift+alt+enter",
    "command": "git.unstageSelectedRanges",
    "when": "editorHasSelection"
  },

  ////////////////////////////////////////////////////////////////////////////////////////
  // Panel
  ////////////////////////////////////////////////////////////////////////////////////////

  // Panel
  {
    "key": "ctrl+`",
    "command": "workbench.action.toggleMaximizedPanel",
    "when": "!panelFocus"
  },
  {
    "key": "ctrl+`",
    "command": "workbench.action.togglePanel",
    "when": "activePanel == 'workbench.panel.markers' || activePanel == 'workbench.panel.output' || activePanel == 'workbench.panel.repl' || activePanel == 'workbench.panel.terminal' || activePanel == 'workbench.panel.comments'"
  },
  {
    "key": "ctrl+alt+`",
    "command": "workbench.action.togglePanel",
    "when": "!panelFocus"
  },
  {
    "key": "ctrl+alt+`",
    "command": "workbench.action.toggleMaximizedPanel",
    "when": "activePanel == 'workbench.panel.markers' || activePanel == 'workbench.panel.output' || activePanel == 'workbench.panel.repl' || activePanel == 'workbench.panel.terminal' || activePanel == 'workbench.panel.comments'"
  },
  {
    "key": "cmd+shift-d",
    "command": "workbench.action.togglePanelPosition",
    "when": "panelFocus"
  },

  // Panel views
  {
    "key": "cmd+l cmd+t",
    "command": "workbench.action.terminal.focus"
  },
  {
    "key": "cmd+l cmd+m",
    "command": "workbench.action.problems.focus"
  },
  {
    "key": "cmd+l cmd+d",
    "command": "workbench.debug.action.focusRepl"
  },
  {
    "key": "cmd+l cmd+c",
    "command": "workbench.action.focusCommentsPanel"
  },

  // Integrated terminal
  {
    "key": "cmd+k cmd+k",
    "command": "workbench.action.terminal.clear",
    "when": "terminalFocus"
  },
  {
    "key": "cmd+k",
    "command": "-workbench.action.terminal.clear",
    "when": "terminalFocus"
  },
  {
    "key": "alt+t",
    "command": "workbench.action.terminal.new"
  },
  {
    "key": "ctrl+shift+`",
    "command": "-workbench.action.terminal.new"
  },
  {
    "key": "alt+cmd+enter",
    "command": "workbench.action.terminal.runSelectedText",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+\\",
    "command": "-workbench.action.terminal.split",
    "when": "terminalFocus"
  },

  ////////////////////////////////////////////////////////////////////////////////////////
  // Editor features
  ////////////////////////////////////////////////////////////////////////////////////////

  // Table formatter
  {
    "key": "alt+\\",
    "command": "extension.table.formatCurrent",
    "when": "editorTextFocus"
  },

  // Pasting
  {
      "key": "cmd+shift+v",
      "command": "pasteAndIndent.action",
      "when": "editorTextFocus && !editorReadonly"
  },

  // Text selection
  {
    "key": "shift+alt+down",
    "command": "editor.action.smartSelect.expand",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+cmd+right",
    "command": "-editor.action.smartSelect.expand",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+alt+up",
    "command": "editor.action.smartSelect.shrink",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+cmd+left",
    "command": "-editor.action.smartSelect.shrink",
    "when": "editorTextFocus"
  },

  // Folding
  {
    "key": "cmd+k cmd+=",
    "command": "dakara-foldplus.levelAtCursor"
  },
  {
    "key": "cmd+k cmd+-",
    "command": "dakara-foldplus.levelOfParent"
  },

  // Refactoring
  {
    "key": "alt+enter",
    "command": "editor.action.rename",
    "when": "!editorHasSelection && editorHasRenameProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "f2",
    "command": "-editor.action.rename",
    "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
  },

  // Define and find reference
  {
    "key": "cmd+k alt+cmd+up",
    "command": "editor.action.referenceSearch.trigger",
    "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
  },
  {
    "key": "shift+f12",
    "command": "-editor.action.referenceSearch.trigger",
    "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
  },
  {
    "key": "cmd+k alt+cmd+down",
    "command": "editor.action.peekDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
  },
  {
    "key": "alt+f12",
    "command": "-editor.action.peekDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
  },
  {
    "key": "alt+cmd+down",
    "command": "editor.action.revealDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "f12",
    "command": "-editor.action.revealDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "alt+cmd+up",
    "command": "references-view.find",
    "when": "editorHasReferenceProvider"
  },
  {
    "key": "shift+alt+f12",
    "command": "-references-view.find",
    "when": "editorHasReferenceProvider"
  },

  // Font zoom
  {
    "key": "shift+cmd+=",
    "command": "-workbench.action.zoomIn"
  },
  {
    "key": "shift+cmd+-",
    "command": "-workbench.action.zoomOut"
  },
  {
    "key": "shift+cmd+=",
    "command": "editor.action.fontZoomIn"
  },
  {
    "key": "shift+cmd+-",
    "command": "editor.action.fontZoomOut"
  },

  ////////////////////////////////////////////////////////////////////////////////////////
  // Editor groups
  ////////////////////////////////////////////////////////////////////////////////////////

  // Focusing a different editor group
  {
    "key": "ctrl+up",
    "command": "workbench.action.focusAboveGroup"
  },
  {
    "key": "ctrl+down",
    "command": "workbench.action.focusBelowGroup"
  },
  {
    "key": "ctrl+left",
    "command": "workbench.action.focusLeftGroup"
  },
  {
    "key": "ctrl+right",
    "command": "workbench.action.focusRightGroup"
  },

  // Moving an editor to a different group
  {
    "key": "ctrl+alt+up",
    "command": "workbench.action.moveEditorToAboveGroup"
  },
  {
    "key": "ctrl+alt+down",
    "command": "workbench.action.moveEditorToBelowGroup"
  },
  {
    "key": "ctrl+alt+left",
    "command": "workbench.action.moveEditorToLeftGroup"
  },
  {
    "key": "ctrl+alt+right",
    "command": "workbench.action.moveEditorToRightGroup"
  },

  // Using a single editor group
  {
    "key": "cmd+k cmd+k",
    "command": "workbench.action.editorLayoutSingle",
    "when": "!terminalFocus"
  },

  ////////////////////////////////////////////////////////////////////////////////////////
  // New, auto-added commands
  ////////////////////////////////////////////////////////////////////////////////////////
  {
    "key": "cmd+d",
    "command": "workbench.action.terminal.split",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+alt+=",
    "command": "extension.emeraldwalk.enableRunOnSave"
  },
  {
    "key": "ctrl+alt+-",
    "command": "extension.emeraldwalk.disableRunOnSave"
  }
]
