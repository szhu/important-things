[{
        "keys": ["super+shift+b"],
        "command": "build"
    }, {
        "keys": ["super+r"],
        "command": "build",
        "args": {
            "variant": "Run"
        }
    },

    {
        "keys": ["ctrl+c"],
        "command": "exec",
        "args": {
            "kill": true
        }
    }, {
        "keys": ["ctrl+alt+r"],
        "command": "show_panel",
        "args": {
            "panel": "output.exec"
        }
    }, {
        "keys": ["super+alt+shift+p"],
        "command": "goto_symbol_in_project"
    },

    {
        "keys": ["ctrl+alt+t"],
        "command": "toggle_tabs"
    },
    {
        "keys": ["ctrl+alt+/"],
        "command": "toggle_status_bar"
    },
    {
        "keys": ["ctrl+alt+s"],
        "command": "toggle_side_bar"
    },
    {"keys": ["ctrl+alt+l"],
        "command": "toggle_setting",
        "args":
        {
            "setting": "line_numbers"
        }
    },

    {
        "keys": ["super+p"],
        "command": "show_overlay",
        "args": {
            "overlay": "goto",
            "text": "@"
        }
    },


    {
        "keys": ["alt+tab"],
        "command": "auto_complete"
    }, {
        "keys": ["alt+tab"],
        "command": "replace_completion_with_auto_complete",
        "context": [{
            "key": "last_command",
            "operator": "equal",
            "operand": "insert_best_completion"
        }, {
            "key": "auto_complete_visible",
            "operator": "equal",
            "operand": false
        }, {
            "key": "setting.tab_completion",
            "operator": "equal",
            "operand": true
        }]
    },


    {
        "keys": ["super+b"],
        "command": "bracketeer_select"
    }, {
        "keys": ["alt+up"],
        "command": "swap_line_up"
    }, {
        "keys": ["alt+down"],
        "command": "swap_line_down"
    }, {
        "keys": ["super+i"],
        "command": "reindent"
    }, {
        "keys": ["super+back_slash"],
        "command": "toggle_comment",
        "args": {
            "block": false
        }
    }, {
        "keys": ["super+shift+l"],
        "command": "toggle_setting",
        "args": {
            "setting": "word_wrap"
        }
    },

    {
        "keys": ["control+shift+p"],
        "command": "interesting_replace",
        "args": {
            "kind": "grapher_to_latex_essentials"
        },
        "context": [{
            "key": "selector",
            "operator": "equal",
            "operand": "text.tex.latex"
        }]
    }, {
        "keys": ["control+shift+l"],
        "command": "interesting_replace",
        "args": {
            "kind": "grapher_to_latex_unleftright"
        },
        "context": [{
            "key": "selector",
            "operator": "equal",
            "operand": "text.tex.latex"
        }]
    }, {
        "keys": ["super+shift+r"],
        "command": "jump_to_pdf",
        "args": {
            "from_keybinding": true,
            "keep_focus": true
        },
        "context": [{
            "key": "selector",
            "operator": "equal",
            "operand": "text.tex.latex"
        }]
    },

    {
        "keys": ["super+alt+r"],
        "command": "interesting_replace",
        "args": {
            "kind": "tumblr_post"
        },
        "context": [{
            "key": "selector",
            "operator": "equal",
            "operand": "text.html.basic"
        }]
    },



    {
        "keys": ["control+shift+alt+backspace"],
        "command": "run_existing_window_command",
        "args": {
            "id": "repl_python",
            "file": "config/Python/Main.sublime-menu"
        }
    }, {
        "keys": ["super+alt+r"],
        "command": "python_refactor_rename",
        "context": [{
            "key": "selector",
            "operator": "equal",
            "operand": "source.python"
        }]
    }, {
        "keys": ["super+alt+r"],
        "command": "interesting_replace",
        "args": {
            "kind": "osx"
        },
        "context": [{
            "key": "selector",
            "operator": "equal",
            "operand": "text.html.markdown"
        }]
    }, {
        "keys": ["super+shift+backspace"],
        "command": "interesting_replace",
        "args": {
            "kind": "whitespace"
        },
        "context": [{
            "key": "selector",
            "operator": "equal",
            "operand": "text.html.markdown"
        }]
    },


    {
        "keys": ["alt+l"],
        "command": "sublimelinter_goto_error",
        "args": {
            "direction": "next"
        }
    }, {
        "keys": ["alt+shift+l"],
        "command": "sublimelinter_goto_error",
        "args": {
            "direction": "previous"
        }
    },


    /*
    // Auto-pair typographical quotes
    {
        "keys": ["\""],
        "command": "insert_snippet",
        "args": {
            "contents": "“$0”"
        },
        "context": [{
            "key": "setting.auto_match_enabled",
            "operator": "equal",
            "operand": true
        },
        {
            "key": "selection_empty",
            "operator": "equal",
            "operand": true,
            "match_all": true
        },
        {
            "key": "following_text",
            "operator": "regex_contains",
            "operand": "^(?:\t| |\\)|”|;|\\}|$)",
            "match_all": true
        },
        {
            "key": "selector",
            "operator": "equal",
            "operand": "text.html.markdown",
            "match_all": true
        }]
    },
    {
        "keys": ["\""],
        "command": "insert_snippet",
        "args": {
            "contents": "“${0:$SELECTION}”"
        },
        "context": [{
            "key": "setting.auto_match_enabled",
            "operator": "equal",
            "operand": true
        },
        {
            "key": "selection_empty",
            "operator": "equal",
            "operand": false,
            "match_all": true
        },
        {
            "key": "selector",
            "operator": "equal",
            "operand": "text.html.markdown",
            "match_all": true
        }]
    },
    {
        "keys": ["\""],
        "command": "move",
        "args": {
            "by": "characters",
            "forward": true
        },
        "context": [{
            "key": "setting.auto_match_enabled",
            "operator": "equal",
            "operand": true
        },
        {
            "key": "selection_empty",
            "operator": "equal",
            "operand": true,
            "match_all": true
        },
        {
            "key": "following_text",
            "operator": "regex_contains",
            "operand": "^\\”",
            "match_all": true
        },
        {
            "key": "selector",
            "operator": "equal",
            "operand": "text.html.markdown",
            "match_all": true
        }]
    },
    // Smart quotes before & after word
    {
        "keys": ["\""],
        "command": "insert_snippet",
        "args": {
            "contents": "“$0"
        },
        "context": [{
            "key": "setting.auto_match_enabled",
            "operator": "equal",
            "operand": true
        },
        {
            "key": "selection_empty",
            "operator": "equal",
            "operand": true,
            "match_all": true
        },
        {
            "key": "following_text",
            "operator": "regex_contains",
            "operand": "^\\S",
            "match_all": true
        },
        {
            "key": "selector",
            "operator": "equal",
            "operand": "text.html.markdown",
            "match_all": true
        }]
    },
    {
        "keys": ["\""],
        "command": "insert_snippet",
        "args": {
            "contents": "”$0"
        },
        "context": [{
            "key": "setting.auto_match_enabled",
            "operator": "equal",
            "operand": true
        },
        {
            "key": "selection_empty",
            "operator": "equal",
            "operand": true,
            "match_all": true
        },
        {
            "key": "preceding_text",
            "operator": "regex_contains",
            "operand": "^\\S",
            "match_all": true
        },
        {
            "key": "selector",
            "operator": "equal",
            "operand": "text.html.markdown",
            "match_all": true
        }]
    }
    */
]