#!/usr/bin/env python

# For Python 3
try:
    unicode
except NameError:
    unicode = str

class RamboxSettings(object):
    @staticmethod
    def default_db():
        from os.path import expanduser
        return expanduser("~/Library/Application Support/Rambox/Partitions/rambox/Local Storage/file__0.localstorage")
        
    @staticmethod
    def from_db(db_path):
        import sqlite3
        with sqlite3.connect(db_path) as conn:
            c = conn.cursor()
            def single_query_as_str(query):
                result = next(c.execute(query))[0]
                try:
                    result = result.decode('utf-8')
                except AttributeError:
                    pass
                return unicode(result).replace(u"\x00", "")

            service_ids = single_query_as_str(u'''select value from ItemTable where key = "services";''').split(",")

            settings = RamboxSettings()
            settings.in_order = []
            settings.by = {
                'url': {},
                'type': {},
            }

            for service_id in service_ids:
                import json
                result = single_query_as_str(u'''select value from ItemTable where key = "services-%s";''' % service_id)
                service = json.loads(result)

                settings.in_order.append(service)
                settings.by['url'][service['url']] = service
                settings.by['type'][service['type']] = service

        return settings

def main(key='', value=''):
    settings = RamboxSettings.from_db(RamboxSettings.default_db())
    try:
        print(settings.by[key][value]['position'])
    except KeyError:
        return 1

if __name__ == '__main__':
    from sys import argv, exit
    exit(main(*argv[1:]) or 0)
