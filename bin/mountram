#!/usr/bin/env python

def main(cmd, *args):
    cmd = "mountram"
    try:
        size, diskname, fmt = args
    except ValueError:
        raise ProgramError("usage: %s size diskname fmt" % cmd)
    size = int(size)
    mountram(size, diskname, fmt)
    return 0

def create_ram_disk_of_size(size):
    from subprocess import check_output
    realsize = size * 2048
    return check_output(['hdid', '-nomount', 'ram://%d' % realsize]).strip()

def format_dev(dev, fmt, diskname):
    from subprocess import check_call
    check_call(['diskutil', 'eraseVolume', fmt, diskname, dev])

def mountram(size, diskname, fmt):
    dev = create_ram_disk_of_size(size)
    format_dev(dev, fmt, diskname)


##


class ProgramError(Exception):
    pass

def run():
    from sys import argv, stderr
    try:
        exit(main(*argv) or 0)
    except ProgramError, exc:
        print >> stderr, exc
    except KeyboardInterrupt:
        exit(1)

if __name__ == '__main__':
    run()
